{"version":3,"file":"static/js/257.bb619cce.chunk.js","mappings":"mTAEaA,EAASC,EAAAA,GAAAA,IAAH,2CAINC,EAAcD,EAAAA,GAAAA,IAAH,0CAIXE,EAAYF,EAAAA,GAAAA,IAAH,6DAKTG,EAASH,EAAAA,GAAAA,OAAH,yWAsBNI,EAAcJ,EAAAA,GAAAA,IAAH,8CAIXK,EAAQL,EAAAA,GAAAA,IAAH,6CAILM,EAAON,EAAAA,GAAAA,IAAH,oI,SCtBF,SAASO,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BN,EAAAA,EAAAA,UAAS,KAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAA4BR,EAAAA,EAAAA,UAAS,YAArC,eAAOS,EAAP,KAAeC,EAAf,KACMC,GAAwBC,EAAAA,EAAAA,SAAO,GA4BrC,IA1BAC,EAAAA,EAAAA,YAAU,WACRH,EAAU,YACVI,EAAAA,EAAAA,IAAkBhB,GACfiB,MAAK,SAAAC,GACJd,EAASc,GACTN,EAAU,WACX,IACAO,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,SAASC,KAAKC,gBAChCZ,EAAU,WAEX,GACJ,GAAE,CAACZ,KAEJe,EAAAA,EAAAA,YAAU,WACR,IAAKR,EAASkB,OAASZ,EAAsBa,QAG3C,OAFAhB,EAAU,UACVG,EAAsBa,SAAU,GAG9Bb,EAAsBa,UACxBhB,EAAUH,EAASkB,MAAME,MACzBd,EAAsBa,SAAU,EAEnC,GAAE,CAACnB,EAASkB,QAERtB,EAAMyB,MAWX,OADAC,QAAQC,IAAInB,GACG,YAAXA,GACK,SAACoB,EAAA,EAAD,IAEM,aAAXpB,GAEA,iCACE,UAACjB,EAAD,YACE,UAACC,EAAD,CAAQqC,QAAS,kBAAM3B,EAASI,EAAf,EAAjB,WACE,SAAC,MAAD,IADF,eAGA,UAAChB,EAAD,YACE,SAACF,EAAD,CACE0C,IACE9B,EAAM+B,YAAN,yCACsC/B,EAAM+B,aACxCC,EAENC,IAAI,eACJC,MAAM,SAER,UAACzC,EAAD,YACE,wBAAKO,EAAMyB,SACX,wCAAgBU,KAAKC,MAA2B,GAArBpC,EAAMqC,cAAjC,QACA,SAAC3C,EAAD,wBACA,uBAAIM,EAAMsC,YACV,SAAC5C,EAAD,sBACA,uBAjCZ,WACE,IAAI6C,EAAMvC,EAAMwC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAEhC,OADMJ,EAAIK,KAAK,KAEhB,CA6BeC,eAIV,SAAClD,EAAD,KACA,UAACJ,EAAD,YACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMuD,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAACnD,EAAD,KACA,SAACJ,EAAD,WACE,SAAC,KAAD,cAzCR,CA8CD,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Poster = styled.img`\n  display: block;\n`;\n\nexport const PostWrapper = styled.div`\n  display: flex;\n`;\n\nexport const Container = styled.div`\n  width: 1400px;\n  margin: 0 auto;\n`;\n\nexport const Button = styled.button`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 110px;\n  height: 40px;\n  padding: 10px;\n  border: none;\n  border-radius: 4px;\n\n  font-size: 16px;\n\n  cursor: pointer;\n  background-color: aqua;\n\n  &:hover {\n    background-color: #84d2c5;\n  }\n`;\n\nexport const Description = styled.div`\n  margin-left: 30px;\n`;\n\nexport const Title = styled.div`\n  font-weight: 700;\n`;\n\nexport const Line = styled.div`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  height: 3px;\n  width: 100vw;\n  background-color: #84d2c5;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\nimport { ImArrowLeft } from 'react-icons/im';\nimport Loader from 'components/Loader/Loader';\nimport poster from './poster.png';\nimport {\n  Poster,\n  PostWrapper,\n  Container,\n  Button,\n  Description,\n  Title,\n  Line,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({});\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [goBack, setGoBack] = useState('/');\n  const [status, setStatus] = useState('resolved');\n  const isFirstInitialization = useRef(true);\n\n  useEffect(() => {\n    setStatus('pending');\n    fetchMovieDetails(id)\n      .then(res => {\n        setMovie(res);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        toast.error(error.response.data.status_message);\n        setStatus('resolved');\n        return;\n      });\n  }, [id]);\n\n  useEffect(() => {\n    if (!location.state && isFirstInitialization.current) {\n      setGoBack('/');\n      isFirstInitialization.current = false;\n      return;\n    }\n    if (isFirstInitialization.current) {\n      setGoBack(location.state.from);\n      isFirstInitialization.current = false;\n    }\n  }, [location.state]);\n\n  if (!movie.title) {\n    return;\n  }\n\n  function makeGanres() {\n    let gan = movie.genres.map(ganre => ganre.name);\n    gan = gan.join(', ');\n    return gan;\n  }\n\n  console.log(status);\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'resolved') {\n    return (\n      <>\n        <Container>\n          <Button onClick={() => navigate(goBack)}>\n            <ImArrowLeft /> Go back\n          </Button>\n          <PostWrapper>\n            <Poster\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : poster\n              }\n              alt=\"Movie poster\"\n              width=\"250\"\n            />\n            <Description>\n              <h3>{movie.title}</h3>\n              <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n              <Title>Overview</Title>\n              <p>{movie.overview}</p>\n              <Title>Genres</Title>\n              <p>{makeGanres()}</p>\n            </Description>\n          </PostWrapper>\n        </Container>\n        <Line></Line>\n        <Container>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </Container>\n        <Line></Line>\n        <Container>\n          <Outlet />\n        </Container>\n      </>\n    );\n  }\n}\n"],"names":["Poster","styled","PostWrapper","Container","Button","Description","Title","Line","MovieDetails","id","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","goBack","setGoBack","status","setStatus","isFirstInitialization","useRef","useEffect","fetchMovieDetails","then","res","catch","error","toast","response","data","status_message","state","current","from","title","console","log","Loader","onClick","src","poster_path","poster","alt","width","Math","round","vote_average","overview","gan","genres","map","ganre","name","join","makeGanres","to"],"sourceRoot":""}