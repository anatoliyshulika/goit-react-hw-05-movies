{"version":3,"file":"static/js/691.8112c823.chunk.js","mappings":"wMAGe,SAASA,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,KACvCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGH,EAAUI,KAAI,SAAAC,GAAK,aAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKL,GAAL,OAAYI,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,mBACGG,EAAMK,sBADT,QAC2BL,EAAMM,iBAF1BN,EAAME,GADG,KASzB,C,uKCdYK,EAAYC,EAAAA,GAAAA,IAAH,kFAMTC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uMAUPG,EAASH,EAAAA,GAAAA,OAAH,yR,mBCVJ,SAASI,IAAU,IAAD,EAC/B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,UAAQ,UAACF,EAAaG,IAAI,gBAAlB,QAA8B,IAA1E,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCH,EAAAA,EAAAA,UAAS,IAA3C,eAAOrB,EAAP,KAAkByB,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,YAArC,eAAOK,EAAP,KAAeC,EAAf,KAsCA,OApCAC,EAAAA,EAAAA,YAAU,WACHT,EAAaG,IAAI,WAItBK,EAAU,YACVE,EAAAA,EAAAA,IAAqBV,EAAaG,IAAI,UACnCQ,MAAK,SAAAC,GACuB,IAAvBA,EAAIC,QAAQC,QACdC,EAAAA,GAAAA,KAAW,mCACXP,EAAU,cAEVF,EAAaM,EAAIC,SACjBL,EAAU,YAEb,IACAQ,OAAM,SAAAC,GACLF,EAAAA,GAAAA,MAAYE,EAAMC,SAASC,KAAKC,gBAChCZ,EAAU,WAEX,IACJ,GAAE,CAACR,KAgBF,UAACP,EAAD,WACc,YAAXc,IAAwB,SAACc,EAAA,EAAD,KACzB,SAAC,KAAD,CAAQC,cAAe,CAAEC,KAAM,IAAMC,SAZzC,WACqB,KAAfpB,EAKJH,EAAgB,CAAEwB,MAAOrB,IAJvBW,EAAAA,GAAAA,KAAW,oBAKd,EAKG,UACE,UAAC,KAAD,YACE,SAACpB,EAAD,CACE+B,KAAK,OACLH,KAAK,cACLI,SArBV,SAAsBC,GACpBvB,EAAcuB,EAAEC,OAAOC,MACxB,EAoBSA,MAAO1B,KAET,SAACP,EAAD,CAAQ6B,KAAK,SAAb,yBAGH7C,EAAUiC,OAAS,IAAK,SAAClC,EAAA,EAAD,CAAWC,UAAWA,EAAWC,KAAK,OAGpE,C","sources":["components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ movieList, path }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movieList.map(movie => (\n        <li key={movie.id}>\n          <Link to={`${path}${movie.id}`} state={{ from: location }}>\n            {movie.original_title ?? movie.original_name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  path: PropTypes.string.isRequired,\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string,\n      original_name: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1400px;\n  margin: 0 auto;\n  margin-top: 20px;\n`;\n\nexport const FieldSt = styled(Field)`\n  height: 30px;\n  width: 200px;\n  padding: 0 10px;\n  margin-bottom: 15px;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n  border: solid 1px #000000;\n`;\n\nexport const Button = styled.button`\n  height: 31.6px;\n  width: 60px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border: solid 1px #000000;\n  border-left: none;\n\n  cursor: pointer;\n  background-color: aqua;\n\n  &:hover {\n    background-color: #84d2c5;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { Form, Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { fetchSearchingMovies } from 'services/api';\nimport MovieList from 'components/MovieList/MovieList';\nimport { toast } from 'react-toastify';\nimport { Container, FieldSt, Button } from './Movies.styled';\nimport Loader from 'components/Loader/Loader';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') ?? '');\n  const [movieList, setMovieList] = useState([]);\n  const [status, setStatus] = useState('resolved');\n\n  useEffect(() => {\n    if (!searchParams.get('query')) {\n      return;\n    }\n\n    setStatus('pending');\n    fetchSearchingMovies(searchParams.get('query'))\n      .then(res => {\n        if (res.results.length === 0) {\n          toast.warn('Nothing found for your request!');\n          setStatus('resolved');\n        } else {\n          setMovieList(res.results);\n          setStatus('resolved');\n        }\n      })\n      .catch(error => {\n        toast.error(error.response.data.status_message);\n        setStatus('resolved');\n        return;\n      });\n  }, [searchParams]);\n\n  function handleChange(e) {\n    setInputValue(e.target.value);\n  }\n\n  function submitQuery() {\n    if (inputValue === '') {\n      toast.info('Enter your requst');\n      return;\n    }\n\n    setSearchParams({ query: inputValue });\n  }\n\n  return (\n    <Container>\n      {status === 'pending' && <Loader />}\n      <Formik initialValues={{ name: '' }} onSubmit={submitQuery}>\n        <Form>\n          <FieldSt\n            type=\"text\"\n            name=\"searchQuery\"\n            onChange={handleChange}\n            value={inputValue}\n          />\n          <Button type=\"submit\">Search</Button>\n        </Form>\n      </Formik>\n      {movieList.length > 0 && <MovieList movieList={movieList} path=\"\" />}\n    </Container>\n  );\n}\n"],"names":["MovieList","movieList","path","location","useLocation","map","movie","to","id","state","from","original_title","original_name","Container","styled","FieldSt","Field","Button","Movies","useSearchParams","searchParams","setSearchParams","useState","get","inputValue","setInputValue","setMovieList","status","setStatus","useEffect","fetchSearchingMovies","then","res","results","length","toast","catch","error","response","data","status_message","Loader","initialValues","name","onSubmit","query","type","onChange","e","target","value"],"sourceRoot":""}